-- In non-debug-mode, this program counts the number of primes between 108400 and 125400.
set b 84
set c b
-- Debug flag.
jnz a 2
-- In debug mode we skip these next 4, which increate the loop size.
jnz 1 5
-- B becomes 8400
mul b 100
-- B becomes 108400
sub b -100000
-- C becomes 108400
set c b
-- C becomes 125400
sub c -17000
-- Program begins properly, with (b,c) either (84,84) or (108400,125400)
-- START C Post debug jump. while (b - c != 0) - repeat 1000 times
set f 1
jip b 2 -- Bypass the logic - Jump if prime.
-- START B while (d - b != 0) -- for (d = 2; d < b; d++)
set f 0
-- START A while (e - b != 0) -- for (e = 2; e < b; e++)
jnz 1 13
mul l e -- g == de
sub l b -- g = de - b
jnz l 2 -- if (de - b) == 0, set f=0
set f 0
sub e -1 -- inc e
set i e
sub i b
jnz i -8 -- END A
sub d -1 -- inc d
set j d
sub j b
jnz j -13 -- END B
-- If f is zero, we'll increment h, otherwise jump over. How many times do we pass here with F=0?
jnz f 2
sub h -1 -- inc h
set k b
sub k c
-- If k=0, we'll execute the STOP. Otherise we'll do b+=17 and jump to START C.
jnz k 2
-- If we reach here, STOP.
jnz 1 3
sub b -17 -- b += 17
jnz 1 -23 -- END C
